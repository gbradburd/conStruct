functions {
	matrix Cov(int N, vector nugget, real gamma) {
		matrix[N,N] parCov;
		matrix[N,N] Nug_mat;
		parCov = rep_matrix(gamma,N,N);
		Nug_mat = diag_matrix(nugget);
		parCov = parCov + Nug_mat;
		return parCov;	
	}
	real dWish(real temp, int L, matrix obsCov, matrix parCov){
		real lnL;
		lnL = wishart_lpdf(L*obsCov | L,parCov) * temp;
		return lnL;
	}
}
data {
	int<lower=1> K;		  				// number of clusters
	int<lower=2> N; 	  				// number of samples
	int<lower=N+1> L;	    			// number of loci
	matrix[N,N] obsCov; 				// observed projected covariance
	real varMeanFreqs;
	real<lower=0,upper=1> temp;			// temperature parameter for estimating marginal likelihood	
}
parameters {
	real<lower=0> gamma;				// covariance between all pairs of clusters
  	vector<lower=0>[N] nugget; 								// sample-specific variance (allele sampling error + sample-specific drift)
}
transformed parameters {
	matrix[N,N] parCov;					// this specifies the parametric, admixed covariance matrix
	parCov = Cov(N, nugget, gamma);
}
model {
	nugget ~ normal(0,1);										// prior on nugget
	gamma ~ normal(varMeanFreqs,0.5);
	L*obsCov ~ wishart(L,parCov);								// likelihood function
	target += dWish(temp, L, obsCov, parCov);					// likelihood function
}