% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.comparison.R
\name{match.layers.x.runs}
\alias{match.layers.x.runs}
\title{Match layers up across independent conStruct runs}
\usage{
match.layers.x.runs(admix.mat1, admix.mat2, admix.mat1.order = NULL)
}
\arguments{
\item{admix.mat1}{A \code{matrix} of estimated admixture proportions
from the original \code{conStruct} analysis, with one row 
per sample and one column per layer.}

\item{admix.mat2}{A \code{matrix} of estimated admixture proportions
from a second \code{conStruct} analysis, with one row per 
sample and one column per layer, for which the 
layer order is desired. Must have equal or greater number 
of layers to \code{admix.mat1}.}

\item{admix.mat1.order}{An optional \code{vector} giving the
order in which the layers of \code{admix.mat1} are read.}
}
\value{
This function returns a \code{vector} giving the ordering 
			of the layers in \code{admix.mat2} that maximizes 
			similarity between \code{admix.mat1} and re-ordered 
		\code{admix.mat2}.
}
\description{
\code{match.layers.x.runs}
}
\details{
This function takes the results of two independent
\code{conStruct} analyses and compares them to identify 
which layers in a new analysis correspond most closely 
to the layers from an original analysis.

This function compares admixture proportions in layers across 
		independent \code{conStruct} runs, and compares between them to 
			identify the layers in \code{admix.mat2} that correspond most 
		closely to those in \code{admix.mat1}. It then returns a vector 
			giving an ordering of \code{admix.mat2} that matches up the order
			of the layers that correspond to each other.  This can be useful 
			for:
		\enumerate{
			\item Dealing with "label switching" across independent runs 
				with the same number of layers; 
			\item Plotting results from independent runs with different 
				numbers of layers using consistent colors
					(e.g., the "blue" layer shows up as blue even as 
				\code{K} increases); 
				\item Examining results for multimodality (i.e., multiple 
				distinct solutions with qualitatively different patterns
				of membership across layers).
			}
			The \code{admix.mat1.order} argument can be useful when running 
			this function to sync up plotting colors/order across the output 
			of more than two \code{conStruct} runs.
}
