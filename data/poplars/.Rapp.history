collapse.ind.Q <- function(Q,pop.vec){#
	n.pops <- length(unique(pop.vec))#
	admix.props <- matrix(NA,n.pops,ncol(Q))#
	for(i in 1:n.pops){#
		admix.props[i,] <- colMeans(Q[which(pop.vec==i),])#
	}#
	return(admix.props)#
}#
#
pie.plot <- function(Q.file,coords,pop.vec,cluster.colors){#
	Q <- read.table(Q.file,stringsAsFactors=FALSE)#
	admix.props <- collapse.ind.Q(Q,pop.vec)#
	K <- ncol(admix.props)#
	N <- length(unique(pop.vec))#
	cluster.names <- paste0("cluster_",1:K)#
	sample.names <- paste0("sample_", 1:N)#
	color.tab <- caroline::nv(c(cluster.colors[1:K]), cluster.names)#
	pie.list <- lapply(1:N, function(i) {#
	    caroline::nv(admix.props[i, ], cluster.names)#
	})#
	names(pie.list) <- sample.names#
	caroline::pies(pie.list, x0 = coords[, 1], #
	    y0 = coords[, 2], color.table = color.tab, #
	    border = "black", radii = 3, xlab = "", ylab = "", #
	    lty = 1, density = NULL,#
	    xlim = range(coords[,1]) + c(-0.5,0.5),#
	    ylim = range(coords[,2]) + c(-0.5,0.5))#
	box(lwd = 2)#
}
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,"goldenrod1",2,"forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
load("~/Dropbox/conStruct/sims/cross_validation/K_2/sim.dataset.Robj")#
#
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,"goldenrod1",2,"forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(2,4,"forestgreen","goldenrod1"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(2,4,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
load("~/Dropbox/conStruct/sims/cross_validation/K_3/sim.dataset.Robj")
load("~/Dropbox/conStruct/sims/cross_validation/K_3/sim.dataset.Robj")#
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK3_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK2.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,"goldenrod1",2))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 3",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
load("~/Dropbox/conStruct/sims/cross_validation/K_3/sim.dataset.Robj")#
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK3_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK2.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,"goldenrod1",2))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 3",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK3/simK3_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(2,4,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
load("/Users/gburd/Dropbox/gid_runs/bear/runs/bear_rep8_test.lnl.Robj")
ls()
tl8 <- test.lnl
load("/Users/gburd/Dropbox/gid_runs/bear/runs/bear_rep10_test.lnl.Robj")
tl10 <- test.lnl
rm(test.lnl)
ls()
tl10
identical(tl8,tl10)
collapse.ind.Q <- function(Q,pop.vec){#
	n.pops <- length(unique(pop.vec))#
	admix.props <- matrix(NA,n.pops,ncol(Q))#
	for(i in 1:n.pops){#
		admix.props[i,] <- colMeans(Q[which(pop.vec==i),])#
	}#
	return(admix.props)#
}#
#
pie.plot <- function(Q.file,coords,pop.vec,cluster.colors){#
	Q <- read.table(Q.file,stringsAsFactors=FALSE)#
	admix.props <- collapse.ind.Q(Q,pop.vec)#
	K <- ncol(admix.props)#
	N <- length(unique(pop.vec))#
	cluster.names <- paste0("cluster_",1:K)#
	sample.names <- paste0("sample_", 1:N)#
	color.tab <- caroline::nv(c(cluster.colors[1:K]), cluster.names)#
	pie.list <- lapply(1:N, function(i) {#
	    caroline::nv(admix.props[i, ], cluster.names)#
	})#
	names(pie.list) <- sample.names#
	caroline::pies(pie.list, x0 = coords[, 1], #
	    y0 = coords[, 2], color.table = color.tab, #
	    border = "black", radii = 3, xlab = "", ylab = "", #
	    lty = 1, density = NULL,#
	    xlim = range(coords[,1]) + c(-0.5,0.5),#
	    ylim = range(coords[,2]) + c(-0.5,0.5))#
	box(lwd = 2)#
}#
#
load("~/Dropbox/conStruct/sims/cross_validation/K_1/sim.dataset.Robj")
load("~/Dropbox/conStruct/sims/cross_validation/K_2/sim.dataset.Robj")
load("~/Dropbox/conStruct/sims/cross_validation/K_1/sim.dataset.Robj")
load("~/Dropbox/conStruct/sims/cross_validation/K_2/sim.dataset.Robj")
par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est22.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)
pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))
collapse.ind.Q <- function(Q,pop.vec){#
	n.pops <- length(unique(pop.vec))#
	admix.props <- matrix(NA,n.pops,ncol(Q))#
	for(i in 1:n.pops){#
		admix.props[i,] <- colMeans(Q[which(pop.vec==i),])#
	}#
	return(admix.props)#
}#
#
pie.plot <- function(Q.file,coords,pop.vec,cluster.colors){#
	Q <- read.table(Q.file,stringsAsFactors=FALSE)#
	admix.props <- collapse.ind.Q(Q,pop.vec)#
	K <- ncol(admix.props)#
	N <- length(unique(pop.vec))#
	cluster.names <- paste0("cluster_",1:K)#
	sample.names <- paste0("sample_", 1:N)#
	color.tab <- caroline::nv(c(cluster.colors[1:K]), cluster.names)#
	pie.list <- lapply(1:N, function(i) {#
	    caroline::nv(admix.props[i, ], cluster.names)#
	})#
	names(pie.list) <- sample.names#
	caroline::pies(pie.list, x0 = coords[, 1], #
	    y0 = coords[, 2], color.table = color.tab, #
	    border = "black", radii = 3, xlab = "", ylab = "", #
	    lty = 1, density = NULL,#
	    xlim = range(coords[,1]) + c(-0.5,0.5),#
	    ylim = range(coords[,2]) + c(-0.5,0.5))#
	box(lwd = 2)#
}
load("~/Dropbox/conStruct/sims/cross_validation/K_2/sim.dataset.Robj")
par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est2.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(2,4,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")
pdf(file="~/Dropbox/conStruct/writeup/figs/fastStr/fastStr_simK2_pies.pdf",width=12,height=4.5,pointsize=13)#
	par(mfrow=c(1,3))#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_est2.2.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2))#
			mtext(side=3,font=2,text="K=2")#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK3.3.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(4,2,"goldenrod1"))#
			mtext(side=3,font=2,text="K=3")#
			mtext(side=1,font=2,text="true K = 2",cex=1.2,padj=2.7)#
		pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
				 coords = sim.dataset$coords,#
				 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
				 cluster.colors = c(2,4,"goldenrod1","forestgreen"))#
			mtext(side=3,font=2,text="K=4")#
dev.off()
source("~/Dropbox/conStruct/sims/cross_validation/summarize.xvals.R")#
#
setwd("~/Dropbox/conStruct/data/poplars")#
n.reps <- 10#
K <- 7#
for(n in 1:n.reps){#
	load(sprintf("poplar_rep%s_test.lnl.Robj",n,n))#
	assign(paste0("tl",n),test.lnl)#
}#
x.vals <- lapply(1:n.reps,function(n){get(sprintf("tl%s",n))})#
x.vals.std <- lapply(x.vals,standardize.xvals)#
xval.CIs <- get.xval.CIs(x.vals.std,K)#
pdf(file="~/Dropbox/conStruct/writeup/figs/populus/populus_std_xval.pdf",width=10,height=5,pointsize=14)#
#	quartz(width=10,height=5)#
	par(mfrow=c(1,2),mar=c(4,5,4,2))#
	plot.xval.CIs(xval.CIs,K,jitter=0.1,xlim=c(0.75,7.25))#
		legend(x="bottomright",pch=19,col=c("blue","green"),legend=c("spatial","nonspatial"))#
	mtext("Predictive accuracy",side=2,padj=-5,font=2)#
	plot.xval.CIs(xval.CIs,K,ylim=c(-100,0),jitter=0.1,xlim=c(1.75,7.25))#
		legend(x="bottomright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,2),col=c(1,adjustcolor(1,0.8)),legend=c("mean","95% CI"))#
	mtext("number of clusters",side=1,adj=-1.1,padj=4,font=2)#
	mtext("Cross-validation results (Populus)",side=3,adj=5,padj=-2.5,font=2,cex=1.2)#
dev.off()
pdf(file="~/Dropbox/conStruct/writeup/figs/populus/populus_std_xval.pdf",width=10,height=5,pointsize=14)#
#	quartz(width=10,height=5)#
	par(mfrow=c(1,2),mar=c(4,5,4,2))#
	plot.xval.CIs(xval.CIs,K,jitter=0.1,xlim=c(0.75,7.25))#
		legend(x="bottomright",pch=19,col=c("blue","green"),legend=c("spatial","nonspatial"))#
	mtext("Predictive accuracy",side=2,padj=-5,font=2)#
	plot.xval.CIs(xval.CIs,K,ylim=c(-40,0),jitter=0.1,xlim=c(1.75,7.25))#
		legend(x="bottomright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,2),col=c(1,adjustcolor(1,0.8)),legend=c("mean","95% CI"))#
	mtext("number of clusters",side=1,adj=-1.1,padj=4,font=2)#
	mtext("Cross-validation results (Populus)",side=3,adj=5,padj=-2.5,font=2,cex=1.2)#
dev.off()
library(conStruct)#
library(maps)#
my.rep <- 1#
load("~/Dropbox/gid_runs/populus/poplar.spStr.dataset.Robj")#
col.mat1 <- matrix(ifelse(poplar.data$sp.ID=="Populus trichocarpa","forestgreen","black"),byrow=TRUE,length(poplar.data$sp.ID),length(poplar.data$sp.ID))#
col.mat2 <- matrix(ifelse(poplar.data$sp.ID=="Populus trichocarpa","forestgreen","black"),byrow=FALSE,length(poplar.data$sp.ID),length(poplar.data$sp.ID))#
pdf(file="~/Dropbox/conStruct/writeup/figs/populus/populus_sampling_map.pdf",width=6,height=5,pointsize=13)#
	par(mar=c(4,4,1,1))#
	map(xlim = range(poplar.data$coords[,1]) + c(-5,5), ylim = range(poplar.data$coords[,2])+c(-2,2), col="gray")#
	points(poplar.data$coords,pch=19,cex=1.2,col=ifelse(poplar.data$sp.ID=="Populus trichocarpa","forestgreen","black"))#
	legend(x="bottomleft",pch=19,col=c("forestgreen","black"),legend=c("P. trichocarpa","P. balsamifera"))#
	map.axes()#
dev.off()
load("/Users/bradburd/Dropbox/conStruct/data/poplars/poplar.spStr.dataset.Robj")
ls()
names(poplar.data)
freq.data <- conStruct:::process.freq.data(poplar.data$freqs)#
data.block <- conStruct:::make.data.block(K = 1,#
										  freq.data = freq.data,#
										  coords = poplar.data$coords,#
										  spatial = TRUE,#
										  geoDist = fields::rdist.earth(poplar.data$coords))#
load("~/Dropbox/conStruct/data/poplars/training.runs.sp.Robj")
length(training.runs.sp)
freq.data <- conStruct:::process.freq.data(poplar.data$freqs)#
data.block <- conStruct:::make.data.block(K = 1,#
										  freq.data = freq.data,#
										  coords = poplar.data$coords,#
										  spatial = TRUE,#
										  geoDist = fields::rdist.earth(poplar.data$coords))#
load("~/Dropbox/conStruct/data/poplars/training.runs.sp.Robj")#
for(k in 2:7){#
	data.block$K <- k#
	csr <- training.runs.sp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.sp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
	pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_sp",k,".pdf"),width=5,height=5)#
		par(mar=c(5,5,1,1))#
		map(xlim = range(poplar.data$coords[,1]) + c(-5,5), ylim = range(poplar.data$coords[,2])+c(-2,2), col="gray")#
		map.axes()#
		make.admix.pie.plot(data.block,csr,cluster.colors=clst.match$cols,stat="MAP",title="",radii=2.5,add=TRUE)#
	dev.off()#
}
pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_sp_clst_covs.pdf"),width=12,height=8,pointsize=14)#
	#quartz(width=12,height=8)#
	layout(matrix(c(1:6),nrow=2,ncol=3,byrow=TRUE))#
	par(mar=c(4,5,3,2),oma=c(3,3,3,1))	#
for(k in 2:7){#
	data.block$K <- k#
	csr <- training.runs.sp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.sp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
				par(mar=c(5,5,1,1))#
		    order.mat <- order(data.block$geoDist)#
		    y.range <- range(c(#
		    			unlist(lapply(1:data.block$K,#
		    							function(k){#
									        csr$MAP$cluster.params[[k]]$cluster.cov#
						})) + csr$MAP$gamma, #
						data.block$obsCov))			#
		    plot(data.block$geoDist[upper.tri(data.block$obsCov, diag = TRUE)], #
		        data.block$obsCov[upper.tri(data.block$obsCov, diag = TRUE)], #
		        xlim = range(data.block$geoDist), ylim = y.range,#
		        xlab="",ylab="",pch=21,cex=1.3,#
		        col=adjustcolor(col.mat1[upper.tri(data.block$obsCov, diag = TRUE)],0.7),#
		        bg=adjustcolor(col.mat2[upper.tri(data.block$obsCov, diag = TRUE)],0.7))#
			plot.populus.cluster.curves(data.block, csr, cluster.cols=clst.match$cols,add=TRUE)#
			if(k==2){#
				legend(x="topright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,4),legend=c("sample covariance","cluster covariance"))#
			}#
			if(k==7){#
				legend(x="topright",pch=21,#
						pt.bg=c(1,"forestgreen","forestgreen"),#
						col=c(1,1,"forestgreen"),#
						legend=c("balsamifera - balsamifera",#
								 "balsamifera - trichocarpa",#
								 "trichocarpa - trichocarpa"),cex=0.9,pt.cex=1.5)#
			}#
	}#
	mtext(text="geographic distance",side=1,font=2,cex.axis=2,padj=4.5,adj=-3.55)#
	mtext(text="allele frequency covariance",side=2,font=2,cex.axis=2,padj=-59.5,adj=20)#
dev.off()
source("~/Dropbox/conStruct/sims/cross_validation/summarize.xvals.R")
pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_sp_clst_covs.pdf"),width=12,height=8,pointsize=14)#
	#quartz(width=12,height=8)#
	layout(matrix(c(1:6),nrow=2,ncol=3,byrow=TRUE))#
	par(mar=c(4,5,3,2),oma=c(3,3,3,1))	#
for(k in 2:7){#
	data.block$K <- k#
	csr <- training.runs.sp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.sp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
				par(mar=c(5,5,1,1))#
		    order.mat <- order(data.block$geoDist)#
		    y.range <- range(c(#
		    			unlist(lapply(1:data.block$K,#
		    							function(k){#
									        csr$MAP$cluster.params[[k]]$cluster.cov#
						})) + csr$MAP$gamma, #
						data.block$obsCov))			#
		    plot(data.block$geoDist[upper.tri(data.block$obsCov, diag = TRUE)], #
		        data.block$obsCov[upper.tri(data.block$obsCov, diag = TRUE)], #
		        xlim = range(data.block$geoDist), ylim = y.range,#
		        xlab="",ylab="",pch=21,cex=1.3,#
		        col=adjustcolor(col.mat1[upper.tri(data.block$obsCov, diag = TRUE)],0.7),#
		        bg=adjustcolor(col.mat2[upper.tri(data.block$obsCov, diag = TRUE)],0.7))#
			plot.populus.cluster.curves(data.block, csr, cluster.cols=clst.match$cols,add=TRUE)#
			if(k==2){#
				legend(x="topright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,4),legend=c("sample covariance","cluster covariance"))#
			}#
			if(k==7){#
				legend(x="topright",pch=21,#
						pt.bg=c(1,"forestgreen","forestgreen"),#
						col=c(1,1,"forestgreen"),#
						legend=c("balsamifera - balsamifera",#
								 "balsamifera - trichocarpa",#
								 "trichocarpa - trichocarpa"),cex=0.9,pt.cex=1.5)#
			}#
	}#
	mtext(text="geographic distance",side=1,font=2,cex.axis=2,padj=4.5,adj=-3.55)#
	mtext(text="allele frequency covariance",side=2,font=2,cex.axis=2,padj=-59.5,adj=20)#
dev.off()
plot.populus.cluster.curves
plot.populus.cluster.curves <- function(data.block, conStruct.results, cluster.cols=NULL,sample.cols=NULL,add=FALSE){#
	if(is.null(cluster.cols)){#
		cluster.cols <- c("blue", "red", "green", "yellow", "purple","orange", "lightblue", "darkgreen", "lightblue", "gray")#
	}#
	if(add==FALSE){#
		order.mat <- order(data.block$geoDist)#
	    y.range <- range(c(#
	    			unlist(lapply(1:data.block$K,#
	    							function(k){#
								        conStruct.results$MAP$cluster.params[[k]]$cluster.cov#
					})) + conStruct.results$MAP$gamma, #
					data.block$obsCov))#
	    plot(data.block$geoDist[upper.tri(data.block$obsCov, diag = TRUE)], #
	        data.block$obsCov[upper.tri(data.block$obsCov, diag = TRUE)], #
	        xlim = range(data.block$geoDist), ylim = y.range,#
	        xlab="",ylab="",pch=19,col=adjustcolor(1,0.7))#
    }#
    lapply(1:data.block$K, function(k) {#
             lines(data.block$geoDist[order.mat],#
             		conStruct.results$MAP$gamma + #
             		conStruct.results$MAP$cluster.params[[k]]$cluster.cov[order.mat],#
                  col = 1,lwd=4.5,lty=1) ; #
             lines(data.block$geoDist[order.mat],#
             		conStruct.results$MAP$gamma + #
             		conStruct.results$MAP$cluster.params[[k]]$cluster.cov[order.mat],#
                  col = cluster.cols[k],lwd=4,lty=1)#
    })#
    return(invisible("cluster covs"))#
}
plot.populus.cluster.curves
plot.populus.cluster.curves(data.block, csr, cluster.cols=clst.match$cols,add=TRUE)
pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_sp_clst_covs.pdf"),width=12,height=8,pointsize=14)#
	#quartz(width=12,height=8)#
	layout(matrix(c(1:6),nrow=2,ncol=3,byrow=TRUE))#
	par(mar=c(4,5,3,2),oma=c(3,3,3,1))	#
for(k in 2:7){#
	data.block$K <- k#
	csr <- training.runs.sp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.sp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
				par(mar=c(5,5,1,1))#
		    order.mat <- order(data.block$geoDist)#
		    y.range <- range(c(#
		    			unlist(lapply(1:data.block$K,#
		    							function(k){#
									        csr$MAP$cluster.params[[k]]$cluster.cov#
						})) + csr$MAP$gamma, #
						data.block$obsCov))			#
		    plot(data.block$geoDist[upper.tri(data.block$obsCov, diag = TRUE)], #
		        data.block$obsCov[upper.tri(data.block$obsCov, diag = TRUE)], #
		        xlim = range(data.block$geoDist), ylim = y.range,#
		        xlab="",ylab="",pch=21,cex=1.3,#
		        col=adjustcolor(col.mat1[upper.tri(data.block$obsCov, diag = TRUE)],0.7),#
		        bg=adjustcolor(col.mat2[upper.tri(data.block$obsCov, diag = TRUE)],0.7))#
			plot.populus.cluster.curves(data.block, csr, cluster.cols=clst.match$cols,add=TRUE)#
			if(k==2){#
				legend(x="topright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,4),legend=c("sample covariance","cluster covariance"))#
			}#
			if(k==7){#
				legend(x="topright",pch=21,#
						pt.bg=c(1,"forestgreen","forestgreen"),#
						col=c(1,1,"forestgreen"),#
						legend=c("balsamifera - balsamifera",#
								 "balsamifera - trichocarpa",#
								 "trichocarpa - trichocarpa"),cex=0.9,pt.cex=1.5)#
			}#
	}#
	mtext(text="geographic distance",side=1,font=2,cex.axis=2,padj=4.5,adj=-3.55)#
	mtext(text="allele frequency covariance",side=2,font=2,cex.axis=2,padj=-59.5,adj=20)#
dev.off()
load("~/Dropbox/conStruct/data/poplars/training.runs.nsp.Robj")#
for(k in 2:7){#
	data.block$K <- k#
	data.block$spatial <- FALSE#
	csr <- training.runs.nsp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.nsp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
	pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_nsp",k,".pdf"),width=5,height=5)#
		par(mar=c(5,5,1,1))#
		map(xlim = range(poplar.data$coords[,1]) + c(-5,5), ylim = range(poplar.data$coords[,2])+c(-2,2), col="gray")#
		map.axes()#
		make.admix.pie.plot(data.block,csr,cluster.colors=clst.match$cols,stat="MAP",title="",radii=2.5,add=TRUE)#
	dev.off()#
}
pdf(file=paste0("~/Dropbox/conStruct/writeup/figs/populus/populus_nsp_clst_covs.pdf"),width=12,height=8,pointsize=14)#
	#quartz(width=12,height=8)#
	layout(matrix(c(1:6),nrow=2,ncol=3,byrow=TRUE))#
	par(mar=c(4,5,3,2),oma=c(3,3,3,1))	#
for(k in 2:7){#
	data.block$K <- k#
	csr <- training.runs.nsp[[k]][[1]]#
	clst.match <- NULL#
	if(k < 4){#
		csr1.order <- NULL#
	}#
	clst.match$cols <- c(4,2)#
	if(k > 2){#
		tmp.csr <- training.runs.nsp[[k-1]][[1]]#
		clst.match <- match.clusters.x.runs(tmp.csr,csr,csr1.order)#
		csr1.order <- clst.match$clst.order#
	}#
				par(mar=c(5,5,1,1))#
		    order.mat <- order(data.block$geoDist)#
		    y.range <- range(c(#
		    			unlist(lapply(1:data.block$K,#
		    							function(k){#
									        csr$MAP$cluster.params[[k]]$cluster.cov#
						})) + csr$MAP$gamma, #
						data.block$obsCov))			#
		    plot(data.block$geoDist[upper.tri(data.block$obsCov, diag = TRUE)], #
		        data.block$obsCov[upper.tri(data.block$obsCov, diag = TRUE)], #
		        xlim = range(data.block$geoDist), ylim = y.range,#
		        xlab="",ylab="",pch=21,cex=1.3,#
		        col=adjustcolor(col.mat1[upper.tri(data.block$obsCov, diag = TRUE)],0.7),#
		        bg=adjustcolor(col.mat2[upper.tri(data.block$obsCov, diag = TRUE)],0.7))#
			plot.populus.cluster.curves(data.block, csr, cluster.cols=clst.match$cols,add=TRUE)#
			if(k==2){#
				legend(x="topright",pch=c(19,NA),lty=c(NA,1),lwd=c(NA,4),legend=c("sample covariance","cluster covariance"))#
			}#
			if(k==5){#
				legend(x="topright",pch=21,#
						pt.bg=c(1,"forestgreen","forestgreen"),#
						col=c(1,1,"forestgreen"),#
						legend=c("balsamifera - balsamifera",#
								 "balsamifera - trichocarpa",#
								 "trichocarpa - trichocarpa"),cex=0.9,pt.cex=1.5)#
			}#
	}#
	mtext(text="geographic distance",side=1,font=2,cex.axis=2,padj=4.5,adj=-3.55)#
	mtext(text="allele frequency covariance",side=2,font=2,cex.axis=2,padj=-59.5,adj=20)#
dev.off()
