collapse.ind.Q <- function(Q,pop.vec){#
	n.pops <- length(unique(pop.vec))#
	admix.props <- matrix(NA,n.pops,ncol(Q))#
	for(i in 1:n.pops){#
		admix.props[i,] <- colMeans(Q[which(pop.vec==i),])#
	}#
	return(admix.props)#
}#
#
pie.plot <- function(Q.file,coords,pop.vec,cluster.colors){#
	Q <- read.table(Q.file,stringsAsFactors=FALSE)#
	admix.props <- collapse.ind.Q(Q,pop.vec)#
	K <- ncol(admix.props)#
	N <- length(unique(pop.vec))#
	cluster.names <- paste0("cluster_",1:K)#
	sample.names <- paste0("sample_", 1:N)#
	color.tab <- caroline::nv(c(cluster.colors[1:K]), cluster.names)#
	pie.list <- lapply(1:N, function(i) {#
	    caroline::nv(admix.props[i, ], cluster.names)#
	})#
	names(pie.list) <- sample.names#
	caroline::pies(pie.list, x0 = coords[, 1], #
	    y0 = coords[, 2], color.table = color.tab, #
	    border = "black", radii = 2.7, xlab = "", ylab = "", #
	    lty = 1, density = NULL)#
	box(lwd = 2)#
}
load("~/Dropbox/conStruct/sims/cross_validation/K_2/sim.dataset.Robj")
pie.plot(Q.file = "~/Dropbox/conStruct/sims/structure/datasets/simK2/simK2_estK4.4.meanQ",#
		 coords = sim.dataset$coords,#
		 pop.vec = unlist(lapply(1:sim.dataset$N,function(n){rep(n,10)})),#
		 cluster.colors = c(4,2,"goldenrod1","forestgreen"))
